{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","attachmentUrl","refFromURL","delete","toggleEditing","doc","id","update","required","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","createdId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","creatorId","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a20e18bb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        //  console.log(event.target.name);\r\n        //console.log(event.target.value);\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            //console.log(error);\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email required\"\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password required\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                <br />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        //console.log(event.target.name);\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제?\");\r\n        //console.log(ok);\r\n        if (ok) {\r\n            // console.log(nweetObj.id);\r\n            // const data = await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n            // console.log(data);\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                await storageService\r\n                    .refFromURL(nweetObj.attachmentUrl)\r\n                    .delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(nweetObj.id, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>시작</h1>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.id}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img\r\n                            src={nweetObj.attachmentUrl}\r\n                            width=\"50px\"\r\n                            height=\"50px\"\r\n                        />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>\r\n                                Delete Nweet\r\n                            </button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n            <h1>끝</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            createdId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        //  console.log(event.target.files);\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            //console.log(finishedEvent);\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nimport NweetFactory from \"components/NweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const newArray = snapshot.docs.map((document) => ({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                }));\r\n                setNweets(newArray);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n    // const getMyNweets = async () => {\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObj.uid)\r\n    //         .orderBy(\"createdAt\", \"asc\")\r\n    //         .get();\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from \"fbase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","//import { useState } from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    //const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                refreshUser={refreshUser}\r\n                                userObj={userObj}\r\n                            />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    //const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                // setIsLoggedIn(user);\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                //setIsLoggedIn(false);\n                setUserObj(false);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        // setUserObj(authService.currentUser);\n        const user = authService.currentUser;\n        setUserObj({\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport Auth from \"routes/Auth\";\n//import firebase from \"./firebase\";\n//console.log(firebase);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}